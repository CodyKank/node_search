                   _                                     _                   
                  | |                                   | |                  
   _ __   ___   __| | ___ ______ ___  ___  __ _ _ __ ___| |__    _ __  _   _ 
  | '_ \ / _ \ / _` |/ _ \______/ __|/ _ \/ _` | '__/ __| '_ \  | '_ \| | | |
  | | | | (_) | (_| |  __/      \__ \  __/ (_| | | | (__| | | |_| |_) | |_| |
  |_| |_|\___/ \__,_|\___|      |___/\___|\__,_|_|  \___|_| |_(_) .__/ \__, |
                                                                | |     __/ |
                                                                |_|    |___/ 
-------------------------------------------------------------------------------
* node-search.py started in late July/Early August 2016 by intern Cody Kankel for
  Notre Dame CRC.

* node-search.py is a utility script, which can be seen as a swiss-army knife
  type of program for finding relevant information for the Univa Grid Engine.

* How Does it work:
    node-search.py is a python 3 script, which is placed in the afs space
    currently, and it uses the subprocess module to spawn new subprocesses
    which are usually running qstat or qconf and gather their output back into
    the python script which will then parse that output depending on what its
    looking for at that time. Due to this, sometimes the script will run very
    slow, as its waiting on the subprocess to report back the output as some-
    -times UGE takes awhile to repond with those commands. 

* There is a manpage included in the git repo, which should explain in greater
  detail how the script works. To view it from within this dir, type: 
      man ./node-search.1
  You can also add it to your own manpages if you'd like.

* If you are not a member of Notre Dame and are using the UGE and want to use
  this, you may need to play around with trial and error, as there may be 
  ND specific items sprinkled around in the code. As far as I can tell, if you
  have qconf, qstat, and the UGE you should in theory be good to go. All you'd
  have to do is change around the names of the Long/Debug queues in the python
  script to what your needs are.

* node-search.py will search through information gathered from qstat about the
  UGE environment, including information about nodes, users, user-lists, host-
  groups, and it can even give a visualization of a host-group.

* This script is assuming (1) Python 3 is installed, tested with python 3.4.0,
  (2) the subprocess module is installed [should be by default], and (3) you
  have qconf and qstat working and configured.

* To do: Change long documentation to specify that it is the long queue in ONLY
  the general_access hostgroup.
  Make pending_jobs OO. 
  Test with new hardware (Nov '16)
